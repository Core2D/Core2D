<!-- Copyright (c) Wiesław Šoltés. All rights reserved. -->
<!-- Licensed under the MIT license. See LICENSE file in the project root for full license information. -->
<UserControl x:Class="Core2D.Perspex.Views.EditorControl"
             xmlns="https://github.com/perspex"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:i="clr-namespace:Perspex.Xaml.Interactivity;assembly=Perspex.Xaml.Interactivity"
             xmlns:ia="clr-namespace:Perspex.Xaml.Interactions.Core;assembly=Perspex.Xaml.Interactions"
             xmlns:local="clr-namespace:Core2D.Perspex;assembly=Core2D.Perspex"
             xmlns:actions="clr-namespace:Core2D.Perspex.Interactions.Actions;assembly=Core2D.Perspex"
             xmlns:behaviors="clr-namespace:Core2D.Perspex.Interactions.Behaviors;assembly=Core2D.Perspex"
             xmlns:converters="clr-namespace:Core2D.Perspex.Converters;assembly=Core2D.Perspex"
             xmlns:Designer="clr-namespace:Core2D.Editor.Designer;assembly=Core2D"
             xmlns:zoom="clr-namespace:Core2D.Perspex.Controls.Zoom;assembly=Core2D.Perspex"
             xmlns:data="clr-namespace:Core2D.Perspex.Controls.Data;assembly=Core2D.Perspex"
             xmlns:path="clr-namespace:Core2D.Perspex.Controls.Path;assembly=Core2D.Perspex"
             xmlns:project="clr-namespace:Core2D.Perspex.Controls.Project;assembly=Core2D.Perspex"
             xmlns:shapes="clr-namespace:Core2D.Perspex.Controls.Shapes;assembly=Core2D.Perspex"
             xmlns:state="clr-namespace:Core2D.Perspex.Controls.State;assembly=Core2D.Perspex"
             xmlns:style="clr-namespace:Core2D.Perspex.Controls.Style;assembly=Core2D.Perspex"
             xmlns:editor="clr-namespace:Core2D.Perspex.Controls.Editor;assembly=Core2D.Perspex"
             xmlns:views="clr-namespace:Core2D.Perspex.Views;assembly=Core2D.Perspex"
             Design.DataContext="{Static Designer:DesignerContext.Editor}"
             Design.Width="1200" Design.Height="540">
    <Grid Name="rootPanel" ColumnDefinitions="180,Auto,*,Auto,230" RowDefinitions="*,Auto" Margin="4,6,4,2">
        <i:Interaction.Behaviors>
            <ia:DataTriggerBehavior Binding="{Binding #rootPanel.Bounds.Height}" ComparisonCondition="GreaterThan" Value="420">
                <ia:ChangePropertyAction TargetObject="{Binding #leftPanelBottom}" PropertyName="IsVisible" Value="True"/>
                <ia:ChangePropertyAction TargetObject="{Binding #rightPanelBottom}" PropertyName="IsVisible" Value="True"/>
                <ia:ChangePropertyAction TargetObject="{Binding #leftPanelTop}" PropertyName="Grid.RowSpan" Value="1"/>
                <ia:ChangePropertyAction TargetObject="{Binding #rightPanelTop}" PropertyName="Grid.RowSpan" Value="1"/>
            </ia:DataTriggerBehavior>
            <ia:DataTriggerBehavior Binding="{Binding #rootPanel.Bounds.Height}" ComparisonCondition="LessThanOrEqual" Value="420">
                <ia:ChangePropertyAction TargetObject="{Binding #leftPanelBottom}" PropertyName="IsVisible" Value="False"/>
                <ia:ChangePropertyAction TargetObject="{Binding #rightPanelBottom}" PropertyName="IsVisible" Value="False"/>
                <ia:ChangePropertyAction TargetObject="{Binding #leftPanelTop}" PropertyName="Grid.RowSpan" Value="3"/>
                <ia:ChangePropertyAction TargetObject="{Binding #rightPanelTop}" PropertyName="Grid.RowSpan" Value="3"/>
            </ia:DataTriggerBehavior>
            <ia:DataTriggerBehavior Binding="{Binding #rootPanel.Bounds.Width}" ComparisonCondition="GreaterThan" Value="240">
                <ia:ChangePropertyAction TargetObject="{Binding #zoomPanel}" PropertyName="IsVisible" Value="True"/>
            </ia:DataTriggerBehavior>
            <ia:DataTriggerBehavior Binding="{Binding #rootPanel.Bounds.Width}" ComparisonCondition="LessThanOrEqual" Value="240">
                <ia:ChangePropertyAction TargetObject="{Binding #zoomPanel}" PropertyName="IsVisible" Value="False"/>
            </ia:DataTriggerBehavior>
            <ia:DataTriggerBehavior Binding="{Binding #rootPanel.Bounds.Width}" ComparisonCondition="GreaterThan" Value="420">
                <ia:ChangePropertyAction TargetObject="{Binding #toolPanel}" PropertyName="IsVisible" Value="True"/>
            </ia:DataTriggerBehavior>
            <ia:DataTriggerBehavior Binding="{Binding #rootPanel.Bounds.Width}" ComparisonCondition="LessThanOrEqual" Value="420">
                <ia:ChangePropertyAction TargetObject="{Binding #toolPanel}" PropertyName="IsVisible" Value="False"/>
            </ia:DataTriggerBehavior>
            <ia:DataTriggerBehavior Binding="{Binding #rootPanel.Bounds.Width}" ComparisonCondition="GreaterThan" Value="480">
                <ia:ChangePropertyAction TargetObject="{Binding #leftPanelVSplitter}" PropertyName="IsVisible" Value="True"/>
                <ia:ChangePropertyAction TargetObject="{Binding #leftPanel}" PropertyName="IsVisible" Value="True"/>
                <ia:ChangePropertyAction TargetObject="{Binding #containerPanel}" PropertyName="Grid.Column" Value="2"/>
                <ia:ChangePropertyAction TargetObject="{Binding #containerPanel}" PropertyName="Grid.ColumnSpan" Value="3"/>
            </ia:DataTriggerBehavior>
            <ia:DataTriggerBehavior Binding="{Binding #rootPanel.Bounds.Width}" ComparisonCondition="LessThanOrEqual" Value="480">
                <ia:ChangePropertyAction TargetObject="{Binding #leftPanelVSplitter}" PropertyName="IsVisible" Value="False"/>
                <ia:ChangePropertyAction TargetObject="{Binding #leftPanel}" PropertyName="IsVisible" Value="False"/>
                <ia:ChangePropertyAction TargetObject="{Binding #containerPanel}" PropertyName="Grid.Column" Value="0"/>
                <ia:ChangePropertyAction TargetObject="{Binding #containerPanel}" PropertyName="Grid.ColumnSpan" Value="5"/>
            </ia:DataTriggerBehavior>
            <ia:DataTriggerBehavior Binding="{Binding #rootPanel.Bounds.Width}" ComparisonCondition="GreaterThan" Value="720">
                <ia:ChangePropertyAction TargetObject="{Binding #rightPanelVSplitter}" PropertyName="IsVisible" Value="True"/>
                <ia:ChangePropertyAction TargetObject="{Binding #rightPanel}" PropertyName="IsVisible" Value="True"/>
                <ia:ChangePropertyAction TargetObject="{Binding #containerPanel}" PropertyName="Grid.ColumnSpan" Value="1"/>
            </ia:DataTriggerBehavior>
            <ia:DataTriggerBehavior Binding="{Binding #rootPanel.Bounds.Width}" ComparisonCondition="LessThanOrEqual" Value="720">
                <ia:ChangePropertyAction TargetObject="{Binding #rightPanelVSplitter}" PropertyName="IsVisible" Value="False"/>
                <ia:ChangePropertyAction TargetObject="{Binding #rightPanel}" PropertyName="IsVisible" Value="False"/>
            </ia:DataTriggerBehavior>
            <ia:DataTriggerBehavior Binding="{Binding #rootPanel.Bounds.Width}" ComparisonCondition="GreaterThan" Value="800">
                <ia:ChangePropertyAction TargetObject="{Binding #optionsPanel}" PropertyName="IsVisible" Value="True"/>
            </ia:DataTriggerBehavior>
            <ia:DataTriggerBehavior Binding="{Binding #rootPanel.Bounds.Width}" ComparisonCondition="LessThanOrEqual" Value="800">
                <ia:ChangePropertyAction TargetObject="{Binding #optionsPanel}" PropertyName="IsVisible" Value="False"/>
            </ia:DataTriggerBehavior>
            <ia:DataTriggerBehavior Binding="{Binding #rootPanel.Bounds.Width}" ComparisonCondition="GreaterThan" Value="1100">
                <ia:ChangePropertyAction TargetObject="{Binding #statsPanel}" PropertyName="IsVisible" Value="True"/>
            </ia:DataTriggerBehavior>
            <ia:DataTriggerBehavior Binding="{Binding #rootPanel.Bounds.Width}" ComparisonCondition="LessThanOrEqual" Value="1100">
                <ia:ChangePropertyAction TargetObject="{Binding #statsPanel}" PropertyName="IsVisible" Value="False"/>
            </ia:DataTriggerBehavior>
        </i:Interaction.Behaviors>
        <GridSplitter Name="leftPanelVSplitter" Classes="vertical" Grid.Column="1" Grid.Row="0" Width="6"/>
        <Grid Name="containerPanel" Grid.Row="0" Grid.Column="2">
            <Border Classes="container">
                <Border Classes="transparent" ClipToBounds="True">
                    <zoom:PanAndZoom Name="panAndZoom" AutoFitMode="None" ZoomSpeed="1.2" Background="{StyleResource TransparentBrush}" ClipToBounds="False" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                        <views:ContainerControl Name="containerControl" Renderer="{Binding Renderers[0]}" Container="{Binding Project.CurrentContainer}" ClipToBounds="False"/>
                    </zoom:PanAndZoom>
                </Border>
            </Border>
        </Grid>
        <Grid Name="leftPanel" RowDefinitions="50*,Auto,50*" Grid.Column="0" Grid.Row="0">
            <Border Name="leftPanelTop" Classes="leftTop" Grid.Row="0">
                <TabControl Classes="bottom">
                    <TabItem Header="Project" Classes="property">
                        <project:ProjectControl DataContext="{Binding Project, Mode=TwoWay}"/>
                    </TabItem>
                    <TabItem Header="Options" Classes="property">
                        <ContentControl Content="{Binding Project.Options, Mode=TwoWay}"/>
                    </TabItem>
                    <TabItem Header="Images" Classes="property">
                        <project:ImagesControl DataContext="{Binding Project, Mode=TwoWay}"/>
                    </TabItem>
                </TabControl>
            </Border>
            <GridSplitter Name="leftPanelHSplitter" Classes="horizontal" Grid.Row="1" Height="7"/>
            <Border Name="leftPanelBottom" Classes="leftBottom" Grid.Row="2">
                <TabControl Classes="bottom">
                    <TabItem Header="Groups" Classes="property">
                        <project:GroupsControl DataContext="{Binding Project, Mode=TwoWay}"/>
                    </TabItem>
                    <TabItem Header="Databases" Classes="property">
                        <project:DatabasesControl DataContext="{Binding Project, Mode=TwoWay}"/>
                    </TabItem>
                </TabControl>
            </Border>
        </Grid>
        <GridSplitter Name="rightPanelVSplitter" Classes="vertical" Grid.Column="3" Grid.Row="0" Width="6"/>
        <Grid Name="rightPanel" RowDefinitions="50*,Auto,50*" Grid.Column="4" Grid.Row="0">
            <Border Name="rightPanelTop" Classes="rightTop" Grid.Row="0">
                <TabControl Classes="bottom">
                    <TabItem Header="Styles" Classes="property">
                        <project:StylesControl DataContext="{Binding Project, Mode=TwoWay}"/>
                    </TabItem>
                    <TabItem Header="Templates" Classes="property">
                        <project:TemplatesControl DataContext="{Binding Project, Mode=TwoWay}"/>
                    </TabItem>
                </TabControl>
            </Border>
            <GridSplitter Name="rightPanelHSplitter" Classes="horizontal" Grid.Row="1" Height="7"/>
            <Border Name="rightPanelBottom" Classes="rightBottom" Grid.Row="2">
                <TabControl Classes="bottom">
                    <TabItem Header="Shape" Classes="property">
                        <ScrollViewer Content="{Binding Project.CurrentContainer.CurrentShape}"/>
                    </TabItem>
                    <TabItem Header="Data" Classes="property">
                        <ScrollViewer>
                            <data:DataControl DataContext="{Binding Renderers[0].State.SelectedShape.Data, Mode=TwoWay}"/>
                        </ScrollViewer>
                    </TabItem>
                    <TabItem Header="Style" Classes="property">
                        <ScrollViewer>
                            <style:ShapeStyleControl DataContext="{Binding Project.CurrentStyleLibrary.Selected, Mode=TwoWay}"/>
                        </ScrollViewer>
                    </TabItem>
                    <TabItem Header="Container" Classes="property">
                        <ScrollViewer Content="{Binding Project.CurrentContainer, Mode=TwoWay}"/>
                    </TabItem>
                    <TabItem Header="Template" Classes="property">
                        <ScrollViewer>
                            <project:TemplateControl DataContext="{Binding Project.CurrentTemplate, Mode=TwoWay}"/>
                        </ScrollViewer>
                    </TabItem>
                </TabControl>
            </Border>
        </Grid>
        <Grid ColumnDefinitions="Auto,*" Grid.Column="0" Grid.ColumnSpan="5" Grid.Row="1" Margin="0,2,0,0">
            <TextBlock Name="statsPanel" Classes="stats" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Center">
                <TextBlock.Text>
                    <MultiBinding Mode="OneWay" Converter="{Static converters:EditorToStatsMultiConverter.Instance}">
                        <Binding Path="Project.Documents.Length"/>
                        <Binding Path="Project.CurrentDocument.Pages.Length"/>
                        <Binding Path="Project.CurrentContainer.Layers.Length"/>
                        <Binding Path="Project.CurrentContainer.CurrentLayer.Shapes.Length"/>
                        <Binding Path="Renderers[0].State.SelectedShape" Converter="{Static converters:ObjectToObjectConverter.Instance}"/>
                        <Binding Path="Renderers[0].State.SelectedShapes" Converter="{Static converters:ObjectToObjectConverter.Instance}"/>
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
            <WrapPanel Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Center" Orientation="Horizontal">
                <WrapPanel Name="toolPanel">
                    <DropDown Classes="tool" Items="{Static Editor:Enums.ToolValues}" SelectedItem="{Binding CurrentTool, Mode=TwoWay}"/>
                    <DropDown Classes="tool" Items="{Static Editor:Enums.PathToolValues}" SelectedItem="{Binding CurrentPathTool, Mode=TwoWay}">
                        <DropDown.IsVisible>
                            <MultiBinding Mode="OneWay" Converter="{Static converters:ObjectEqualityMultiConverter.Instance}">
                                <Binding Path="CurrentTool"/>
                                <Binding Source="{Static Editor:Tool.Path}"/>
                            </MultiBinding>
                        </DropDown.IsVisible>
                    </DropDown>
                </WrapPanel>
                <WrapPanel Name="zoomPanel">
                    <Button Content="Reset" Classes="autofit" Command="{Static Editor:Commands.ZoomResetCommand}"/>
                    <Button Content="AutoFit" Classes="autofit" Command="{Static Editor:Commands.ZoomAutoFitCommand}"/>
                    <DropDown Classes="autofit" Items="{Static zoom:PanAndZoom.AutoFitModes}" SelectedItem="{Binding #panAndZoom.AutoFitMode, Mode=TwoWay}"/>
                    <TextBox Classes="autofit" Text="{Binding #panAndZoom.ZoomSpeed, Mode=TwoWay}" Width="50"/>
                </WrapPanel>
                <WrapPanel Name="optionsPanel">
                    <CheckBox Classes="options" Content="Stroked" IsChecked="{Binding Project.Options.DefaultIsStroked, Mode=TwoWay}"/>
                    <CheckBox Classes="options" Content="Filled" IsChecked="{Binding Project.Options.DefaultIsFilled, Mode=TwoWay}"/>
                    <CheckBox Classes="options" Content="Closed" IsChecked="{Binding Project.Options.DefaultIsClosed, Mode=TwoWay}"/>
                    <CheckBox Classes="options" Content="SmoothJoin" IsChecked="{Binding Project.Options.DefaultIsSmoothJoin, Mode=TwoWay}"/>
                    <CheckBox Classes="options" Content="Snap" IsChecked="{Binding Project.Options.SnapToGrid, Mode=TwoWay}"/>
                    <CheckBox Classes="options" Content="Connect" IsChecked="{Binding Project.Options.TryToConnect, Mode=TwoWay}"/>
                    <CheckBox Classes="options" Content="CloneStyle" IsChecked="{Binding Project.Options.CloneStyle, Mode=TwoWay}"/>
                </WrapPanel>
            </WrapPanel>
        </Grid> 
    </Grid>
</UserControl>
